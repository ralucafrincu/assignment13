{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["const boardElement = document.getElementById('board')\nconst winnerElement = document.getElementById('winner')\nconst restartButton = document.getElementById('restart')\nconst cellsElement = document.querySelectorAll('.cell')\n\nlet board: string[] = ['', '', '', '', '', '', '', '', '']\nlet currentPlayer: 'X' | 'O' = 'X'\nlet gameActive: boolean = true\n\nconst winningConditions: number[][] = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n]\n\nif(boardElement && winnerElement && restartButton && cellsElement) {\n\n    function handleCellClick(event: MouseEvent) {\n        const cell = event.target as HTMLButtonElement\n        const index = parseInt(cell.getAttribute('data-index') || '-1')\n\n        if (index >= 0 && board[index] === '' && gameActive) {\n            board[index] = currentPlayer\n            cell.textContent = currentPlayer\n            checkResult()\n            if (gameActive) {\n                if (currentPlayer === 'X') {\n                    currentPlayer = 'O'\n                } else {\n                    currentPlayer = 'X'\n                }\n            }\n        }\n    }\n\n    function checkResult() {\n        let roundWon = false\n        for (let i = 0; i < winningConditions.length; i++) {\n            const condition = winningConditions[i]\n            const a = board[condition[0]]\n            const b = board[condition[1]]\n            const c = board[condition[2]]\n\n            if (a !== '' && b !== '' && c !== '' && a === b && b === c) {\n                roundWon = true\n                break\n            }\n        }\n\n        if (roundWon) {\n\n            winnerElement.textContent = `Player ${currentPlayer} wins!`\n            gameActive = false\n        } else if (board.indexOf('') === -1) {\n            winnerElement.textContent = \"It's a draw!\"\n            gameActive = false\n        }\n    }\n\n    function restartGame() {\n        board = ['', '', '', '', '', '', '', '', '']\n        gameActive = true\n        currentPlayer = 'X'\n        winnerElement.textContent = ''\n\n        cellsElement.forEach(cell => cell.textContent = '')\n    }\n\n    boardElement.addEventListener('click', handleCellClick)\n    restartButton.addEventListener('click', restartGame)\n\n}\n"],
  "mappings": "AAAA,MAAM,eAAe,SAAS,eAAe,OAAO;AACpD,MAAM,gBAAgB,SAAS,eAAe,QAAQ;AACtD,MAAM,gBAAgB,SAAS,eAAe,SAAS;AACvD,MAAM,eAAe,SAAS,iBAAiB,OAAO;AAEtD,IAAI,QAAkB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACzD,IAAI,gBAA2B;AAC/B,IAAI,aAAsB;AAE1B,MAAM,oBAAgC;AAAA,EAClC,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AACZ;AAEA,IAAG,gBAAgB,iBAAiB,iBAAiB,cAAc;AAE/D,MAAS,kBAAT,SAAyB,OAAmB;AACxC,UAAM,OAAO,MAAM;AACnB,UAAM,QAAQ,SAAS,KAAK,aAAa,YAAY,KAAK,IAAI;AAE9D,QAAI,SAAS,KAAK,MAAM,KAAK,MAAM,MAAM,YAAY;AACjD,YAAM,KAAK,IAAI;AACf,WAAK,cAAc;AACnB,kBAAY;AACZ,UAAI,YAAY;AACZ,YAAI,kBAAkB,KAAK;AACvB,0BAAgB;AAAA,QACpB,OAAO;AACH,0BAAgB;AAAA,QACpB;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ,GAES,cAAT,WAAuB;AACnB,QAAI,WAAW;AACf,aAAS,IAAI,GAAG,IAAI,kBAAkB,QAAQ,KAAK;AAC/C,YAAM,YAAY,kBAAkB,CAAC;AACrC,YAAM,IAAI,MAAM,UAAU,CAAC,CAAC;AAC5B,YAAM,IAAI,MAAM,UAAU,CAAC,CAAC;AAC5B,YAAM,IAAI,MAAM,UAAU,CAAC,CAAC;AAE5B,UAAI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,GAAG;AACxD,mBAAW;AACX;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,UAAU;AAEV,oBAAc,cAAc,UAAU,aAAa;AACnD,mBAAa;AAAA,IACjB,WAAW,MAAM,QAAQ,EAAE,MAAM,IAAI;AACjC,oBAAc,cAAc;AAC5B,mBAAa;AAAA,IACjB;AAAA,EACJ,GAES,cAAT,WAAuB;AACnB,YAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAC3C,iBAAa;AACb,oBAAgB;AAChB,kBAAc,cAAc;AAE5B,iBAAa,QAAQ,UAAQ,KAAK,cAAc,EAAE;AAAA,EACtD;AAjDS,MAAAA,mBAAA,iBAkBAC,eAAA,aAwBAC,eAAA;AAST,eAAa,iBAAiB,SAAS,eAAe;AACtD,gBAAc,iBAAiB,SAAS,WAAW;AAEvD;",
  "names": ["handleCellClick", "checkResult", "restartGame"]
}
